# k8s/backend.yaml

# 1. Deployment du Backend FastAPI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookbook-backend-deployment
spec:
  # Maintenir 2 réplicas comme souhaité
  replicas: 2 
  selector:
    matchLabels:
      app: cookbook-backend
  template:
    metadata:
      labels:
        app: cookbook-backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/pront-Ix/cookbook-app-backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            # Injecter les variables requises par Settings via le Secret et le Service
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: POSTGRES_DB
            - name: POSTGRES_SERVER
              value: "postgres-service"
            # Valeur alternative complète si nécessaire
            - name: DATABASE_URL
              value: "postgresql+psycopg2://cookbook_user:strong_password@postgres-service:5432/cookbook_db"
            
            # Suppression des variables POSTGRES_* individuelles pour éviter la redondance
            # si elles ne sont utilisées que par Pydantic, qui utilise maintenant DATABASE_URL.

          # Ajoutez un Liveness et Readiness probe (Health Checks)
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 10

---

# 2. Service pour exposer le Backend à l'intérieur du cluster
apiVersion: v1
kind: Service
metadata:
  name: cookbook-backend-service
spec:
  selector:
    app: cookbook-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP